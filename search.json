[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "myblog",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nAug 1, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJul 29, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\n  \n\n\n\n\nFinal Project Blog\n\n\n\n\n\nFinal Project Blog\n\n\n\n\n\n\nJul 26, 2023\n\n\nYour Name\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/Topics.html",
    "href": "posts/Topics.html",
    "title": "Final Project Blog",
    "section": "",
    "text": "What is one activity that relieves you of your stress? Gaming? Reading? One activity that I would want to take up is painting. When I say painting, I mean follow in the footsteps of the iconic Bob Ross of course. In today’s society, the name “Bob Ross” is well-known mostly thanks to his large entertainment personality he gained even after his death. For further explanation, Bob Ross was a painter and host of the American TV show titled “The Joy of Painting”, which totals at 403 half-hour episodes that ran from 1983 to 1994. In just 30 minutes, Bob Ross would provide you the instructions to create a painting, all while giving you iconic, motivational phrases to help you on your way. With just his paint brush, canvas, and lovable personality, Bob Ross was able to capture the hearts of many people, showing them that anyone can be a painter. Even after the show aired, the popularity of his show grew, heightened by the accessibility of the episodes on the Internet and Youtube. His show will forever be an iconic part of art culture. Despite it being just an instructional art show, how exactly did it capture the hearts of so many? There are a bunch of instructional videos out there about art but none as iconic as Bob Ross’. Bob Ross has become so iconic for the way he is able to give a chance at painting to anyone, no matter their actual skill level of painting. Is it the paintings themselves, or is it the way Bob Ross speaks? Is there something more behind the strokes? By exploring this Bob Ross dataset and using the Youtube API to analyze the videos of Bob Ross, I hope to answer these questions and learn about the different aspects of his videos that make him so inspirational and loveable."
  },
  {
    "objectID": "posts/Topics.html#introduction",
    "href": "posts/Topics.html#introduction",
    "title": "Final Project Blog",
    "section": "",
    "text": "What is one activity that relieves you of your stress? Gaming? Reading? One activity that I would want to take up is painting. When I say painting, I mean follow in the footsteps of the iconic Bob Ross of course. In today’s society, the name “Bob Ross” is well-known mostly thanks to his large entertainment personality he gained even after his death. For further explanation, Bob Ross was a painter and host of the American TV show titled “The Joy of Painting”, which totals at 403 half-hour episodes that ran from 1983 to 1994. In just 30 minutes, Bob Ross would provide you the instructions to create a painting, all while giving you iconic, motivational phrases to help you on your way. With just his paint brush, canvas, and lovable personality, Bob Ross was able to capture the hearts of many people, showing them that anyone can be a painter. Even after the show aired, the popularity of his show grew, heightened by the accessibility of the episodes on the Internet and Youtube. His show will forever be an iconic part of art culture. Despite it being just an instructional art show, how exactly did it capture the hearts of so many? There are a bunch of instructional videos out there about art but none as iconic as Bob Ross’. Bob Ross has become so iconic for the way he is able to give a chance at painting to anyone, no matter their actual skill level of painting. Is it the paintings themselves, or is it the way Bob Ross speaks? Is there something more behind the strokes? By exploring this Bob Ross dataset and using the Youtube API to analyze the videos of Bob Ross, I hope to answer these questions and learn about the different aspects of his videos that make him so inspirational and loveable."
  },
  {
    "objectID": "posts/Topics.html#methods",
    "href": "posts/Topics.html#methods",
    "title": "Final Project Blog",
    "section": "Methods",
    "text": "Methods\nThe Bob Ross dataset that I’m using comes from a data-focused news website and subsidiary to ABC News called FiveThirtyEight. The creator of the dataset is Walt Hickey, FiveThirtyEight’s chief culture writer, who manually coded all the episodes of the show with 67 keywords that served as different elements observed in Bob Ross’ paintings in the Bob Ross Inc. store.The Bob Ross dataset includes a comprehensive list of all the episodes and the individual elements of the paintings, such as trees. The dataset is sorted with a 0 if an element is not in the episode and 1 if it is in the episode. There shouldn’t be much cleaning of this dataset except for excluding episode numbers and their titles to focus on element counts. We will be using various exploratory data techniques and visualizations to look at this dataset. https://github.com/fivethirtyeight/data/tree/master/bob-ross\nFirst let’s look at the necessary libraries we need to import. In order to look at this data nicely, I’ll make use of the Pandas and Matplotlib libraries. These libraries call for fast, powerful, flexible and easy to use open source data analysis and manipulation tools, built on top of the Python programming language. These are used to present data in nice formats. provide multiple convenient methods for filtering data, work with a variety of data formats, and provide convenient functions for quickly plotting data. With these we can read the csv provided with the following link: “https://raw.githubusercontent.com/fivethirtyeight/data/master/bob-ross/elements-by-episode.csv”\nJust looking at the raw data, we can’t really discern any trends or outliers. This is evident if you just plot a bar graph with no changes to the data.\nSo I summed each category to provide one number for each element, and put those numbers in a bar graph. Now we can get a clearer picture of how frequent certain elements are used throughout Bob Ross’ show.\nIn order to make the graph clearer, I sorted the values based on ascending order. By sorting the values we can easily discern which elements were used the most and least.\nI also decided to make use of a treemap to show the difference in sum values in comparison to each other. To do this I imported the squarify library.\nLet’s move on to a more focused analysis of Bob Ross’ language. I first attempted to use the Youtube API to gather all the transcripts of a Bob Ross playlist into one list. This Bob Ross playlist contains all 403 episodes. However, Google and Youtubes’ new restrictions didn’t allow me to obtain the transcripts of the video, despite being able to gather the video ids and other information like video titles. To get around this obstacle, I used youtube-transcript-api, which is a Python API which allows you to get the transcripts/subtitles for a given YouTube video. After getting a list of video ids from the Youtube API, I used the youtube-transcript-api to grab the transcripts from each of the video ids and concatenate them together into one string. There may be missing data realted to transcripts not being available in certain videos. After obtaining a string of the concatenated transcripts, I imported requests and nltk which can be used to build Python programs interacting with human language data. With this I was able to tokenize the transcripts to sort through punctuation and stopwords, and then used the vader lexicon to analyze the compound scores of each individual word. I then sorted out the words into positive and negative words and visualized the top 15 of each with horizontal bar graphs. I also just visualized the top 30 most common words in the transcript into a bar graph to compare."
  },
  {
    "objectID": "posts/Topics.html#results",
    "href": "posts/Topics.html#results",
    "title": "Final Project Blog",
    "section": "Results",
    "text": "Results\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndp = pd.read_csv(\"https://raw.githubusercontent.com/fivethirtyeight/data/master/bob-ross/elements-by-episode.csv\")\n# Remove non-numeric columns (EPISODE and TITLE)\ndp = dp.drop(columns=['EPISODE', 'TITLE'])\n\n# Sum the values for each category for all episodes\ncategory_sums = dp.sum()\n\nplt.figure(figsize=(12, 6))\ncategory_sums.plot(kind='bar')\nplt.xlabel('Categories')\nplt.ylabel('Sums')\nplt.title('Sums of All Categories for Each Episode')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n\n#sorts categories in ascending order for clearer graph\ncategory_sums = category_sums.sort_values(ascending=True)\n\n# Create a bar plot to visualize the sums of all categories\nplt.figure(figsize=(12, 6))\ncategory_sums.plot(kind='bar')\nplt.xlabel('Categories')\nplt.ylabel('Sums')\nplt.title('Sums of All Categories for Each Episode')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nlabel_value_dict[\"PERSON\"]\n\n1\n\n\n\n!pip install squarify\nimport squarify\nimport seaborn as sb\n\n\nRequirement already satisfied: squarify in /opt/conda/lib/python3.10/site-packages (0.4.3)\n\n\n\ncategory_sums = category_sums[category_sums &gt; 0]\n# Convert the category_sums Series into lists of labels and values\nlabels = category_sums.index.tolist()  # List of category names (labels)\nvalues = category_sums.values.tolist()  # List of sums for each category (values)\nlabel_value_dict = dict(zip(labels, values))\nsorted_values, sorted_labels = zip(*sorted(zip(values, labels), reverse=True))\n# Create a treemap visualization using seaborn and squarify\n\nplt.figure(figsize=(10, 6))\nsquarify.plot(sizes=sorted_values, label=sorted_labels, color=sb.color_palette(\"Spectral\", len(sorted_values)))\nplt.axis(\"off\")\nplt.title(\"Category Sums - Bob Ross Elements by Episode\")\nplt.show()\n\n\n\n\nFrom these visualizations, the most common elements in Bob Ross’ paintings are trees, mountains, clouds, lakes. We can confirm this by looking at simple descriptive statistics of the totals below. All typical of the landscape paintings he created. One interesting finding we can observe here is that despite painting things associated with humans, he rarely put humans in the paintings themselves, as seen when we call “PERSON” below.\n\n# a look at the sums\ncategory_sums\n\nLAKES                  0\nFARM                   1\nFIRE                   1\nFLORIDA_FRAME          1\nHALF_CIRCLE_FRAME      1\n                    ... \nCLOUDS               179\nCONIFER              212\nDECIDUOUS            227\nTREES                337\nTREE                 361\nLength: 67, dtype: int64\n\n\n\n# Convert the category_sums Series into lists of labels and values\nlabels = category_sums.index.tolist()  # List of category names (labels)\nvalues = category_sums.values.tolist()  # List of sums for each category (values)\n\n# Print the labels and values\nprint(\"Labels:\", labels)\nprint(\"Values:\", values)\n\nLabels: ['APPLE_FRAME', 'AURORA_BOREALIS', 'BARN', 'BEACH', 'BOAT', 'BRIDGE', 'BUILDING', 'BUSHES', 'CABIN', 'CACTUS', 'CIRCLE_FRAME', 'CIRRUS', 'CLIFF', 'CLOUDS', 'CONIFER', 'CUMULUS', 'DECIDUOUS', 'DIANE_ANDRE', 'DOCK', 'DOUBLE_OVAL_FRAME', 'FARM', 'FENCE', 'FIRE', 'FLORIDA_FRAME', 'FLOWERS', 'FOG', 'FRAMED', 'GRASS', 'GUEST', 'HALF_CIRCLE_FRAME', 'HALF_OVAL_FRAME', 'HILLS', 'LAKE', 'LAKES', 'LIGHTHOUSE', 'MILL', 'MOON', 'MOUNTAIN', 'MOUNTAINS', 'NIGHT', 'OCEAN', 'OVAL_FRAME', 'PALM_TREES', 'PATH', 'PERSON', 'PORTRAIT', 'RECTANGLE_3D_FRAME', 'RECTANGULAR_FRAME', 'RIVER', 'ROCKS', 'SEASHELL_FRAME', 'SNOW', 'SNOWY_MOUNTAIN', 'SPLIT_FRAME', 'STEVE_ROSS', 'STRUCTURE', 'SUN', 'TOMB_FRAME', 'TREE', 'TREES', 'TRIPLE_FRAME', 'WATERFALL', 'WAVES', 'WINDMILL', 'WINDOW_FRAME', 'WINTER', 'WOOD_FRAMED']\nValues: [1, 2, 17, 27, 2, 7, 1, 120, 69, 4, 2, 28, 8, 179, 212, 86, 227, 1, 1, 1, 1, 24, 1, 1, 12, 23, 53, 142, 22, 1, 1, 18, 143, 0, 1, 2, 3, 160, 99, 11, 36, 38, 9, 49, 1, 3, 1, 1, 126, 77, 1, 75, 109, 1, 11, 85, 40, 1, 361, 337, 1, 39, 34, 1, 1, 69, 1]\n\n\n\n# bar graph of the data without any cleaning and sorting\nplt.figure()\ndp.plot(kind='bar')\n\n&lt;Axes: &gt;\n\n\n&lt;Figure size 640x480 with 0 Axes&gt;\n\n\n\n\n\n\n## The following script did not allow me to get the transcripts\n\nimport requests\nimport json\nimport pandas as pd\nfrom pandas import json_normalize \nfrom xml.etree import ElementTree\nimport sys\n\nYT_API_KEY = 'AIzaSyBcB3DNBzU4zwmE5mNb44GHF1NebdcC3x8'\nplaylist_id = 'PLAEQD0ULngi67rwmhrkNjMZKvyCReqDV4'\nresults = []\n\ndef load_playlist(api_key, playlist_id, next_page_token=None):\n    print(\"loading playlist next_page_token:\", next_page_token)\n    url = \"https://www.googleapis.com/youtube/v3/playlistItems\"\n\n    querystring = {\n        \"part\":\"snippet\",\n        \"maxResults\":\"1\",\n        \"playlistId\":playlist_id,\n        \"key\":api_key\n        }\n    if next_page_token is not None:\n        querystring['pageToken'] = next_page_token\n\n    response = requests.request(\"GET\", url, params=querystring)\n    json = response.json()\n    items = json['items']\n    for item in items:\n        video_id = item['snippet']['resourceId']['videoId']\n        item['transcript'] = load_transcript(video_id)\n\n    results.append(items)\n    if 'nextPageToken' in json:\n        load_playlist(api_key, playlist_id, json['nextPageToken'])\n\n    return results\ndef load_transcript(video_id):\n    print(\"download transcript video_id: {}\".format(video_id))\n\n    url = \"http://video.google.com/timedtext\"\n\n    querystring = {\n        \"lang\":\"en\",\n        \"v\":video_id\n    }\n    # print(\"load video\",video_id)\n    response = requests.request(\"GET\", url, params=querystring)\n    if not response.ok:\n        print(\"could not get transcript for {} !200\".format(video_id))\n        return ''\n\n    try:\n        transcript = ''\n        tree = ElementTree.fromstring(response.text)\n        for elem in tree:\n            transcript += elem.text + \" \"\n        return transcript\n    except:\n        print(\"could not get transcript for {} xml parse error\".format(video_id))\n        return ''\n\ndef main(api_key=YT_API_KEY, playlist_id=playlist_id):\n    json_results = load_playlist(api_key, playlist_id)\n\n    #flatten the list\n    flat_list = []\n    for sublist in json_results:\n        for item in sublist:\n            flat_list.append(item)\n    #convert to dataframe\n    df = json_normalize(flat_list)\n    #save the dataframe as csv\n    df.to_csv('test.csv')\n    print(\"file saved\")\n\nif __name__ == '__main__':\n    main(api_key=YT_API_KEY, playlist_id=playlist_id)\n\n\n#This is the result of the above code\n\n# Replace 'transcripts.csv' with the actual filename if it's different\ncsv_filename = 'transcripts.csv'\n\n# Load the CSV file into a pandas DataFrame\ndf = pd.read_csv(csv_filename)\n\n# Display the DataFrame\ndf.head()\n\n\n\n\n\n\n\n\n\n\nVideoID\nTitle\nTranscript\n\n\n\n\n0\noh5p5f5_-7A\nBob Ross - A Walk in the Woods (Season 1 Episo...\nNaN\n\n\n1\nRInDWhYceLU\nBob Ross - Mt. McKinley (Season 1 Episode 2)\nNaN\n\n\n2\nUOziR7PoVco\nBob Ross - Ebony Sunset (Season 1 Episode 3)\nNaN\n\n\n3\n0pwoixRikn4\nBob Ross - Winter Mist (Season 1 Episode 4)\nNaN\n\n\n4\nDFSIQNjKRfk\nBob Ross - Quiet Stream (Season 1 Episode 5)\nNaN\n\n\n\n\n\n\n\n\nstop_words = list(punctuation) + stopwords.words('english')\nanalyzer = vader.SentimentIntensityAnalyzer()\n\n\nbob_tokens = word_tokenize(all_transcripts)\npositive_words = []\nnegative_words = []\n\nfor word in bob_tokens:\n    compound_score = analyzer.polarity_scores(word)['compound']\n    if compound_score &gt; 0:\n        positive_words.append(word)\n    elif compound_score &lt; 0:\n        negative_words.append(word)\n\n\n# Filter out stopwords from the macbeth_tokens list\nbob_filtered_tokens = [word for word in bob_tokens if word.lower() not in stop_words]\n\n# Get the 15 most common negative and positive words\nn = 15\nmost_common_positive = nltk.FreqDist(positive_words).most_common(n)\nmost_common_negative = nltk.FreqDist(negative_words).most_common(n)\n\nfig, axes = plt.subplots(1, 2, figsize=(15, 8))\n\n# Create a horizontal bar plot for the 15 most common negative words\naxes[0].barh(range(n), [count for _, count in most_common_negative], align='center', color='red')\naxes[0].set_yticks(range(n))\naxes[0].set_yticklabels([word for word, _ in most_common_negative])\naxes[0].set_xlabel('Contribution to sentiment')\naxes[0].set_title('15 Most Common Negative Words')\naxes[0].set_xlim(0, 10000)\n\n# Create a horizontal bar plot for the 15 most common positive words\naxes[1].barh(range(n), [count for _, count in most_common_positive], align='center', color='green')\naxes[1].set_yticks(range(n))\naxes[1].set_yticklabels([word for word, _ in most_common_positive])\naxes[1].set_xlabel('Contribution to sentiment')\naxes[1].set_title('15 Most Common Positive Words')\naxes[1].set_xlim(0, 10000)\n\n(0.0, 10000.0)\n\n\n\n\n\n\nbobfreq = nltk.FreqDist(bob_filtered_tokens).most_common(30)\nwords, frequencies = zip(*bobfreq)\n# Create a bar graph\nplt.bar(words, frequencies, color='blue')\nplt.xlabel('Words')\nplt.ylabel('Frequency')\nplt.title('30 Most Common Words')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n\n\n\n\nThere is much to say when comparing the top 15 negative words to the top 15 positive words. To make the comparisons even more obvious, I set the horizontal axis to same limit of 10000 instances. Even just looking at the counts themselves, the amount of positive words greatly outnumbers the amount of negative words in Bob Ross’ speech. In the negative word graph, none of the top 15 ever go past 2000 contributions to sentiment. However, not only do a lot of the positive words surpass 50 contributions, the top positive word caps at almost 10000. In addition to this comparison of positive and negative words, I also included a bar graph of the 30 most common words throughout the transcripts. An interesting finding is that the top word was “little,” with our top positive word following close behind."
  },
  {
    "objectID": "posts/Topics.html#discussion",
    "href": "posts/Topics.html#discussion",
    "title": "Final Project Blog",
    "section": "Discussion",
    "text": "Discussion\nLooking at the exploratory data visualizations first, the most common elements in Bob Ross’ paintings center around very simple concepts of nature. This trend of simple concepts emphasizes how little things like trees can contribute to making a masterpiece. The absence of many man made objects like buildings and barns only emphasizes the theme of simplicity in his paintings. In addition to simple concepts of nature, the absence of any people in Bob Ross’ paintings highlights how the subject of paintings never centered around people, since they represent more complex concepts. This can be related to the absence of manmade objects as well. Overall, Bob Ross’ paintings reflect the theme of focusing on the simpler things in life, adding to his calm nature.\nIn addition to his paintings, Bob Ross’ calming nature can be attributed to his language used throughout all 403 episodes of his show. This difference in contributions between negative and positive words shows how positive of a person Bob Ross was in each of his videos, allowing for people of all ages to easily follow him. I find it interesting that one of the top words with the most contributions is “okay”. This finding can be related to Bob Ross’ motto of how anyone can be an artist. In addition to “okay” the top most frequently used word overall was “little.” This word can also relate back to the theme of simplicity in Bob Ross’ videos. One of Bob Ross’ famous quotes talks about how “there are no mistakes, just happy accidents.” No matter how badly you think you mess up on something in your painting, Bob Ross always assures you to look in a positive light and to never be brought down by negative events. It’s these constant little reassurances that pile up and result in the good mood and aura that Bob Ross has created in the art community. The key to how Bob Ross became so iconic was not just through his paintings, but through his words as well. Both emphasize a simplicity that is so warm and welcoming, that you’ll end up drawing a bunch of happy little trees in no time!"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]